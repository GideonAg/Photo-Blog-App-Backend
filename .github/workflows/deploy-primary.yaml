name: Deploy Primary Region

on:
  push:
    branches: [ main, dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package

      - name: Prepare AWS SDK Layer
        run: |
          mkdir -p aws-sdk-layer/java/lib
          cd aws-sdk-layer
          mvn clean package
          cp -r target/aws-sdk-layer-1.0-SNAPSHOT.jar java/lib/
          cd ..
          mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Build with SAM
        run: sam build -t template.yaml

      - name: Get backup resources from eu-central-1
        run: |
          BACKUP_BUCKET_ARN=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --region eu-central-1 \
            --query "Stacks[0].Outputs[?OutputKey=='BackupBucketArn'].OutputValue" \
            --output text)
          
          BACKUP_USER_POOL_ID=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --region eu-central-1 \
            --query "Stacks[0].Outputs[?OutputKey=='BackupUserPoolId'].OutputValue" \
            --output text)
          
          BACKUP_USER_POOL_CLIENT_ID=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --region eu-central-1 \
            --query "Stacks[0].Outputs[?OutputKey=='BackupUserPoolClientId'].OutputValue" \
            --output text)
          
          echo "BACKUP_BUCKET_ARN=$BACKUP_BUCKET_ARN" >> $GITHUB_ENV
          echo "BACKUP_USER_POOL_ID=$BACKUP_USER_POOL_ID" >> $GITHUB_ENV
          echo "BACKUP_USER_POOL_CLIENT_ID=$BACKUP_USER_POOL_CLIENT_ID" >> $GITHUB_ENV

      - name: Create S3 Bucket if it does not exist
        run: |
          BUCKET_NAME="my-photo-blog-deployment-bucket"
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket $BUCKET_NAME already exists"
          else
            echo "Creating bucket $BUCKET_NAME"
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region eu-west-1 --create-bucket-configuration LocationConstraint=eu-west-1
          fi
        env:
          AWS_DEFAULT_REGION: eu-west-1

      - name: Deploy CloudFormation stack
        run: |
          sam deploy \
            --template template.yaml \
            --stack-name photo-blog-primary \
            --parameter-overrides \
              AppName=photo-blog-application \
              StageName=dev \
              BackupRegion=eu-central-1 \
              BackupBucketArn=${{ env.BACKUP_BUCKET_ARN }} \
              BackupUserPoolId=${{ env.BACKUP_USER_POOL_ID }} \
              BackupUserPoolClientId=${{ env.BACKUP_USER_POOL_CLIENT_ID }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --s3-bucket my-photo-blog-deployment-bucket