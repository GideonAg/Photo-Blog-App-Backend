name: Deploy Photo Blog (Backup & Primary)

on:
  push:
    branches: [ main, dev ]

jobs:
  deploy-backup:
    name: Deploy Backup Region
    runs-on: ubuntu-latest
    environment: production
    outputs:
      backup_bucket_arn: ${{ steps.export-resources.outputs.BACKUP_BUCKET_ARN }}
      backup_user_pool_id: ${{ steps.export-resources.outputs.BACKUP_USER_POOL_ID }}
      backup_user_pool_client_id: ${{ steps.export-resources.outputs.BACKUP_USER_POOL_CLIENT_ID }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Debug - List files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -la
          echo "Checking if backup-template.yaml exists:"
          if [ -f "backup-template.yaml" ]; then
            echo "File exists"
            cat backup-template.yaml | head -n 10
          else
            echo "File does not exist"
          fi

      - name: SAM Build
        run: sam build -t backup-template.yaml

      - name: Debug - Check build output
        run: |
          echo "Checking .aws-sam directory:"
          ls -la .aws-sam/
          echo "Checking build directory:"
          ls -la .aws-sam/build/
          echo "Checking template file:"
          find .aws-sam -name "*.yaml"

      - name: Create S3 Bucket if not exists
        run: |
          BUCKET_NAME="my-photo-blog-backup-deployment-buckets"
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket exists"
          else
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region eu-central-1 \
              --create-bucket-configuration LocationConstraint=eu-central-1
          fi

      - name: SAM Deploy
        run: |
          TEMPLATE_FILE=$(find .aws-sam -name "template.yaml" | head -n 1)
          if [ -z "$TEMPLATE_FILE" ]; then
            echo "Could not find template.yaml, looking for backup-template.yaml"
            TEMPLATE_FILE=$(find .aws-sam -name "backup-template.yaml" | head -n 1)
          fi
          
          if [ -z "$TEMPLATE_FILE" ]; then
            echo "Error: Could not find any template file in .aws-sam directory"
            exit 1
          fi
          
          echo "Using template file: $TEMPLATE_FILE"
          
          sam deploy \
            --template-file "$TEMPLATE_FILE" \
            --stack-name photo-blog-backup \
            --parameter-overrides \
              AppName=photo-blog-group1 \
              StageName=dev \
              PrimaryRegion=eu-central-1 \
              PrimaryAccountId=${{ secrets.AWS_ACCOUNT_ID }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-confirm-changeset \
            --s3-bucket my-photo-blog-backup-deployment-buckets

      - name: Export backup resources
        id: export-resources
        run: |
          BACKUP_BUCKET_ARN=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --query "Stacks[0].Outputs[?OutputKey=='BackupBucketArn'].OutputValue" \
            --output text)
          
          BACKUP_USER_POOL_ID=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --query "Stacks[0].Outputs[?OutputKey=='BackupUserPoolId'].OutputValue" \
            --output text)
          
          BACKUP_USER_POOL_CLIENT_ID=$(aws cloudformation describe-stacks \
            --stack-name photo-blog-backup \
            --query "Stacks[0].Outputs[?OutputKey=='BackupUserPoolClientId'].OutputValue" \
            --output text)
          
          echo "BACKUP_BUCKET_ARN=$BACKUP_BUCKET_ARN" >> $GITHUB_ENV
          echo "BACKUP_USER_POOL_ID=$BACKUP_USER_POOL_ID" >> $GITHUB_ENV
          echo "BACKUP_USER_POOL_CLIENT_ID=$BACKUP_USER_POOL_CLIENT_ID" >> $GITHUB_ENV
          
          echo "Backup Bucket ARN: $BACKUP_BUCKET_ARN"
          echo "Backup User Pool ID: $BACKUP_USER_POOL_ID"
          echo "Backup User Pool Client ID: $BACKUP_USER_POOL_CLIENT_ID"
          
          # Set outputs for the next job
          echo "BACKUP_BUCKET_ARN=$BACKUP_BUCKET_ARN" >> $GITHUB_OUTPUT
          echo "BACKUP_USER_POOL_ID=$BACKUP_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "BACKUP_USER_POOL_CLIENT_ID=$BACKUP_USER_POOL_CLIENT_ID" >> $GITHUB_OUTPUT

  deploy-primary:
    name: Deploy Primary Region
    runs-on: ubuntu-latest
    environment: production
    needs: deploy-backup

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Debug - List files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in current directory:"
          ls -la
          echo "Checking if primary-template.yaml exists:"
          if [ -f "primary-template.yaml" ]; then
            echo "File exists"
            cat primary-template.yaml | head -n 10
          else
            echo "File does not exist"
          fi

      - name: Build with SAM
        run: sam build -t primary-template.yaml

      - name: Debug - Check build output
        run: |
          echo "Checking .aws-sam directory:"
          ls -la .aws-sam/
          echo "Checking build directory:"
          ls -la .aws-sam/build/
          echo "Checking template file:"
          find .aws-sam -name "*.yaml"

      - name: Verify backup resources from previous job
        run: |
          echo "Verifying backup resources..."
          echo "Backup Bucket ARN: ${{ needs.deploy-backup.outputs.backup_bucket_arn }}"
          echo "Backup User Pool ID: ${{ needs.deploy-backup.outputs.backup_user_pool_id }}"
          echo "Backup User Pool Client ID: ${{ needs.deploy-backup.outputs.backup_user_pool_client_id }}"
          
          if [ -z "${{ needs.deploy-backup.outputs.backup_bucket_arn }}" ] || [ -z "${{ needs.deploy-backup.outputs.backup_user_pool_id }}" ] || [ -z "${{ needs.deploy-backup.outputs.backup_user_pool_client_id }}" ]; then
            echo "ERROR: One or more backup resources are missing. Deployment cannot proceed."
            exit 1
          else
            echo "All backup resources retrieved successfully."
          fi

      - name: Create S3 Bucket if it does not exist
        run: |
          BUCKET_NAME="my-photo-blog-deployment-bucket"
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket $BUCKET_NAME already exists"
          else
            echo "Creating bucket $BUCKET_NAME"
            aws s3api create-bucket --bucket "$BUCKET_NAME" --region eu-west-1 --create-bucket-configuration LocationConstraint=eu-west-1
          fi
        env:
          AWS_DEFAULT_REGION: eu-west-1

      - name: Deploy CloudFormation stack
        run: |
          # Find the template file
          TEMPLATE_FILE=$(find .aws-sam -name "template.yaml" | head -n 1)
          if [ -z "$TEMPLATE_FILE" ]; then
            echo "Could not find template.yaml, looking for primary-template.yaml"
            TEMPLATE_FILE=$(find .aws-sam -name "primary-template.yaml" | head -n 1)
          fi
          
          # Check if template file was found
          if [ -z "$TEMPLATE_FILE" ]; then
            echo "Error: Could not find any template file in .aws-sam directory"
            exit 1
          fi
          
          echo "Using template file: $TEMPLATE_FILE"
          
          sam deploy \
            --template-file "$TEMPLATE_FILE" \
            --stack-name photo-blog-primary \
            --parameter-overrides \
              AppName=photo-blog-group1 \
              StageName=dev \
              BackupRegion=eu-central-1 \
              BackupBucketArn=${{ needs.deploy-backup.outputs.backup_bucket_arn }} \
              BackupUserPoolId=${{ needs.deploy-backup.outputs.backup_user_pool_id }} \
              BackupUserPoolClientId=${{ needs.deploy-backup.outputs.backup_user_pool_client_id }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --s3-bucket my-photo-blog-deployment-bucket