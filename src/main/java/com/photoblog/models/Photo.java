package com.photoblog.models;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Map;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@DynamoDBTable(tableName = "")
public class Photo {
    static {
        String tableName = System.getenv("PHOTO_TABLE");
        if (tableName != null && !tableName.isEmpty()) {
            DynamoDBMapperConfig.Builder builder = DynamoDBMapperConfig.builder();
            builder.setTableNameOverride(DynamoDBMapperConfig.TableNameOverride.withTableNameReplacement(tableName));
            builder.build();
        }
    }

    @DynamoDBHashKey
    @DynamoDBAttribute(attributeName = "UserId")
    private String userId;

    @DynamoDBRangeKey
    @DynamoDBAutoGeneratedKey
    @DynamoDBAttribute(attributeName = "ImageId")
    private String imageId;

    @DynamoDBAttribute
    private String imageName;

    @DynamoDBAttribute
    private String s3Bucket;

    @DynamoDBAttribute
    private String s3Key;

    @DynamoDBAttribute
    private Map<String, String> watermarkDetails;

    @DynamoDBAttribute
    private String uploadTimestamp;

    @DynamoDBAttribute
    private String status;

    @DynamoDBAttribute
    private String shareLink;

    @DynamoDBAttribute
    private String shareLinkExpiry;

    @DynamoDBAttribute
    private String recycleBinTimestamp;

    @DynamoDBAttribute
    private String createdAt;

    @DynamoDBAttribute
    private String updatedAt;
}