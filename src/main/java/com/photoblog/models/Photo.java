package com.photoblog.models;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.photoblog.utils.LocalDateTimeConverter;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@DynamoDBTable(tableName = "")
public class Photo {
    static {
        String tableName = System.getenv("PHOTOS_TABLE");
        if (tableName != null && !tableName.isEmpty()) {
            DynamoDBMapperConfig.Builder builder = DynamoDBMapperConfig.builder();
            builder.setTableNameOverride(DynamoDBMapperConfig.TableNameOverride.withTableNameReplacement(tableName));
            builder.build();
        }
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    @DynamoDBAttribute(attributeName = "photoId")
    private String photoId;

    @DynamoDBRangeKey
    @DynamoDBAttribute(attributeName = "userId")
    private String userId;

    @DynamoDBAttribute
    private String imageName;

    @DynamoDBAttribute
    private String imageUrl;

    @DynamoDBAttribute
    @DynamoDBTypeConvertedEnum
    private Status status;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime createdAt;

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
    private LocalDateTime updatedAt;

    @DynamoDBAttribute
    private String versionId;

    public enum Status {
        ACTIVE,
        DELETED
    }
}